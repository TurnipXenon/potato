import React, {useEffect, useState} from 'react';
import {useRouter} from "next/router";
import {useAppContext} from "../../../lib/util/app-context";
import {Content} from "turnip_api/ts/rpc/turnip/service";
import {Button, TextField} from "@mui/material";
import Head from "next/head";
import authBasedAdminRedirect from "../../../lib/util/use-auth-admin-redirect";
import useEffectOnce from "../../../lib/util/use-effect-once";

export default function Index() {
    const {profile, contentListProp, setContentListProp} = useAppContext();
    // todo: refactor
    const [content] = useState<Content>((() => {
        if (contentListProp.length !== 1) {
            return {
                title: "",
                description: "",
                content: "",
                tagList: [],
                meta: {"client_error": "wrong contentListProp set"},
                primaryId: "",
                authorId: "",
            }
        }
        return contentListProp[0];
    })());

    const router = useRouter()

    // re-route if setting the contentList went wrong
    useEffect(() => {
        if (content.meta["client_error"] === "wrong contentListProp set") {
            alert("Something went wrong!");
            void router.push("/admin/contents/");
        }
    }, [content, router])
    // cleanup to avoid data leak
    useEffectOnce(() => {
        setContentListProp!([]); // avoid data leak
    })

    // for faster design iteration, comment this and then later uncomment
    // tip: add a to//do: comment after redesign at the top so you don't forget!
    authBasedAdminRedirect();
    if (!profile) {
        return <></>
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main>
                <div className={"blockAllChildren"}>

                    <h2>Content: {content.primaryId}</h2>
                    {/*todo: expand text field*/}
                    <TextField name="Title"
                               label="Title"
                               variant="outlined"
                               defaultValue={content.title}
                               style={{marginBottom: "1em"}}
                    />
                    <TextField
                        name="Content"
                        label="Content"
                        id="outlined-multiline-flexible"
                        multiline
                        maxRows={10}
                        value={content.content}
                        style={{marginBottom: "1em"}}
                    />
                    <TextField
                        id="outlined-multiline-flexible"
                        name="Description"
                        label="Description"
                        multiline
                        maxRows={10}
                        value={content.description}
                        style={{marginBottom: "1em"}}
                    />
                    <h3>Media (TODO)</h3>
                    <h3>Tags (TODO)</h3>
                    <h3>Access Details (TODO)</h3>
                    <Button variant="outlined" onClick={() => alert("Todo")}>Save</Button>
                </div>

            </main>
        </>
    );
}
